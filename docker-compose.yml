# Voice Stack - Production Ready Configuration
# Single, working docker-compose file with all issues resolved

services:
  postgres:
    image: postgres:15.4-alpine
    container_name: voice-stack-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-synapse}
      POSTGRES_USER: ${POSTGRES_USER:-synapse}  
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --locale=C'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - voice-stack-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-synapse} -d $${POSTGRES_DB:-synapse}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  synapse:
    image: matrixdotorg/synapse:v1.96.1
    container_name: voice-stack-synapse
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SYNAPSE_SERVER_NAME: ${SYNAPSE_SERVER_NAME:?SYNAPSE_SERVER_NAME is required}
      SYNAPSE_REPORT_STATS: ${SYNAPSE_REPORT_STATS:-no}
      SYNAPSE_CONFIG_DIR: /data
      SYNAPSE_CONFIG_PATH: /data/homeserver.yaml
    volumes:
      - synapse_data:/data
      - media_store:/data/media_store
    networks:
      - voice-stack-network
    ports:
      - "${SYNAPSE_PORT:-8008}:8008"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://localhost:8008/health', timeout=5).getcode()==200 else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  element:
    build:
      context: .
      dockerfile: Dockerfile.element
    container_name: voice-stack-element
    restart: unless-stopped
    networks:
      - voice-stack-network
    ports:
      - "${ELEMENT_PORT:-8080}:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  coturn:
    image: coturn/coturn:4.6.2-r3
    container_name: voice-stack-coturn
    restart: unless-stopped
    environment:
      - EXTERNAL_IP=${COTURN_EXTERNAL_IP}
    volumes:
      - coturn_data:/var/lib/coturn
    networks:
      - voice-stack-network
    ports:
      - "${COTURN_PORT:-3478}:3478/udp"
      - "${COTURN_PORT:-3478}:3478/tcp"
      - "${COTURN_MIN_PORT:-49152}-${COTURN_MAX_PORT:-49172}:${COTURN_MIN_PORT:-49152}-${COTURN_MAX_PORT:-49172}/udp"
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      turnserver
      --listening-port=3478
      --min-port=${COTURN_MIN_PORT:-49152}
      --max-port=${COTURN_MAX_PORT:-49172}
      --use-auth-secret
      --static-auth-secret=${COTURN_STATIC_AUTH_SECRET}
      --realm=${SYNAPSE_SERVER_NAME}
      --external-ip=${COTURN_EXTERNAL_IP}
      --no-cli
      --no-tls
      --no-dtls
      --log-file=stdout
      --verbose

  synapse-admin:
    image: awesometechnologies/synapse-admin:0.8.7
    container_name: voice-stack-synapse-admin
    restart: unless-stopped
    depends_on:
      - synapse
    environment:
      REACT_APP_SERVER: https://${SYNAPSE_SERVER_NAME:?SYNAPSE_SERVER_NAME is required}
    networks:
      - voice-stack-network
    ports:
      - "${SYNAPSE_ADMIN_PORT:-8082}:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  well-known:
    image: nginx:alpine
    container_name: voice-stack-well-known
    restart: unless-stopped
    networks:
      - voice-stack-network
    ports:
      - "${WELL_KNOWN_PORT:-8090}:80"
    command: >
      sh -c "
        mkdir -p /usr/share/nginx/html/.well-known/matrix &&
        echo '{\"m.server\": \"matrix.byte-box.org:8008\"}' > /usr/share/nginx/html/.well-known/matrix/server &&
        echo '{\"m.homeserver\": {\"base_url\": \"http://localhost:8008\"}}' > /usr/share/nginx/html/.well-known/matrix/client &&
        nginx -g 'daemon off;'
      "
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/.well-known/matrix/server"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    external: true
    name: voice-stack_postgres_data
  synapse_data:
    external: true  
    name: voice-stack_synapse_data
  media_store:
    external: true
    name: voice-stack_media_store
  coturn_data:
    external: true
    name: voice-stack_coturn_data

networks:
  voice-stack-network:
    driver: bridge